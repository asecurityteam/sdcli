version: "2"
run:
  build-tags:
    - integration
  issues-exit-code: 1
  tests: true
  timeout: 5m
output:
  formats:
    text:
      path: stdout
      print-linter-name: true
      print-issued-lines: true
linters:
  default: none
  enable:
    - depguard
    - errcheck
    - gochecknoinits
    - goconst
    - gocyclo
    - gosec
    - govet
    - ineffassign
    - misspell
    - nakedret
    - prealloc
    - revive
    - staticcheck
    - unconvert
    - unparam
    - unused
  settings:
    depguard:
      rules:
        main:
          deny:
            - pkg: github.com/davecgh/go-spew/spew
              desc: not allowed to use spew
    govet:
      enable:
        - shadow # Check for possible unintended shadowing of variables.
    misspell:
      locale: US
    prealloc:
      for-loops: true
    revive:
      rules:
        - name: package-comments
          disabled: true
    unparam:
      check-exported: false
  exclusions:
    generated: lax
    rules:
      - path: (.+)\.go$
        text: Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*printf?|os\.(Un)?Setenv). is not checked
      - path: (.+)\.go$
        text: (possible misuse of unsafe.Pointer|should have signature)
      - path: (.+)\.go$
        text: ineffective break statement. Did you mean to break out of the outer loop
      - path: (.+)\.go$
        text: Use of unsafe calls should be audited
      - path: (.+)\.go$
        text: Subprocess launch(ed with variable|ing should be audited)
      - path: (.+)\.go$
        text: G104
      - path: (.+)\.go$
        text: (Expect directory permissions to be 0750 or less|Expect file permissions to be 0600 or less)
      - path: (.+)\.go$
        text: Potential file inclusion via variable
    paths:
      - third_party$
      - builtin$
      - examples$
formatters:
  enable:
    - gofmt
    - goimports
  settings:
    gofmt:
      simplify: false
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
