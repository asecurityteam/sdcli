# based off https://dev.to/cloudx/multi-arch-docker-images-the-easy-way-with-github-actions-4k54 with minor changes
name: Docker Multiarch

# Controls when the workflow will run
on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'master'

# permissions are needed if pushing to ghcr.io
permissions: 
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v4
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt@sha256:66e11bea77a5ea9d6f0fe79b57cd2b189b5d15b93a2bdb925be22949232e4e55

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker meta
        id: METAID # used in the next step
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            asecurityteam/sdcli
          # Docker tags based on the following events/attributes
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=sha
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64/v8
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.METAID.outputs.tags }}
          labels: ${{ steps.METAID.outputs.labels }}
